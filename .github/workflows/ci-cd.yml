name: CI/CD Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # 0. Setup Node.js
      - name: Setup Node.js 
        uses: actions/setup-node@v2 
        with: 
            node-version: '18'
      # 1. Clonar el repositorio en la m√°quina de GitHub Actions
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Modificar el archivo .env.example con las variables necesarias 
      - name: Update .env.example with Secrets
        run: |
          sed -i "s|DB_DATABASE=.*|DB_DATABASE=\"${{ secrets.DB_DATABASE }}\"|" .env.example
          sed -i "s|DB_USERNAME=.*|DB_USERNAME=\"${{ secrets.DB_USERNAME }}\"|" .env.example
          sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=\"${{ secrets.DB_PASSWORD }}\"|" .env.example
          sed -i "s|APP_DEBUG=.*|APP_DEBUG=\"${{ secrets.APP_DEBUG }}\"|" .env.example
          sed -i "s|APP_URL=.*|APP_URL=\"${{ secrets.APP_URL }}\"|" .env.example


      # 3. Copiar .env.example actualizado a .env
      - name: Copy .env.example to .env
        run: |
          cp .env.example .env
          rm .env.example

      # 4. Instalar dependencias de Node.js y compilar el proyecto frontend
      - name: Clean npm cache and install dependencies 
        run: | 
            npm install 
            npm run build

      # 5. Instalar dependencias de PHP con Composer
      - name: Install PHP Dependencies
        run: |
          composer install --no-dev --optimize-autoloader

      # 6. Comprimir los archivos compilados para transferirlos al servidor remoto
      - name: Compress build files
        run: |
          zip -r build.zip . -x "*.git*" "node_modules/*" "vendor/*" ".github/*"

      # 7. Transferir los archivos comprimidos al servidor remoto usando scp
      - name: Copy files to remote server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          port: ${{secrets.SSH_PORT}}
          source: "build.zip"
          target: "${{secrets.WORK_DIR}}"

      # 8. Descomprimir el archivo en el servidor y ejecutar comandos necesarios
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          port: ${{secrets.SSH_PORT}}
          script: |
            cd ${{secrets.WORK_DIR}}
            unzip -o build.zip
            rm build.zip
            composer install --no-dev --optimize-autoloader
            php artisan key:generate
            php artisan config:cache
            php artisan route:cache